import time

import pytest
from selenium.webdriver.support.ui import WebDriverWait as ws
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.webdriver import WebDriver
from selenium.common.exceptions import NoSuchElementException,TimeoutException
from selenium.webdriver.common.by import By

from urllib import parse
from pages.main_pagecopy import MainPage
from pages.user_info import user
from pages.cart_page import CartPage

@pytest.mark.usefixtures("driver")
class TestMainPage:
    def test_TC_002_add_to_cart(self, driver: WebDriver):
        try:
            main_page = MainPage(driver)
            cart_page = CartPage(driver)
            main_page.open()

            """wait = ws(driver, 10) 
            wait.until(EC.url_contains("naver.com"))
            assert "naver.com" in driver.current_url #검증증
            driver.find_element(By.XPATH, '//*[@id="shortcutArea"]/ul/li[4]/a/span[2]').click()
            time.sleep(5)

            button = ws(driver, 10).until(
            EC.presence_of_element_located((By.XPATH, '//*[@id="__next"]//a[contains(text(),"닫기")]')))
            #button[0].click()
            time.sleep(2)
                """
            time.sleep(2)
            main_page.search_items('과자')
            item_name = parse.quote('과자')
            assert item_name in driver.current_url
            time.sleep(2)

            #cart_page.item_selection(0)

        except NoSuchElementException as e:
            assert False

    @pytest.mark.skip(reason="아직 테스트 케이스 발동 안함")
    def test_click_link_text(self, driver: WebDriver):
        try:

            main_page = MainPage(driver)
            main_page.open()


            # 로그인 페이지(accounts)로 이동했는지 확인
            wait = ws(driver, 10) 
            wait.until(EC.url_contains("coupang.com"))
            assert "coupang.com" in driver.current_url #검증증
            time.sleep(2) #봇 아닌척

            main_page.click_by_LINK_TEST("로그인")
            assert "login" in driver.current_url
            time.sleep(2)
            driver.back()
            wait.until(EC.url_contains("coupang.com"))
            assert "coupang.com" in driver.current_url #검증증

            time.sleep(2) #봇 아닌척
            main_page.click_by_LINK_TEST("회원가입")
            driver.save_screenshot('메인페이지-회원가입-성공.jpg')
            assert "memberJoinFrm" in driver.current_url

            time.sleep(2)
            driver.back()
            wait.until(EC.url_contains("coupang.com"))
            assert "coupang.com" in driver.current_url #검증증

            time.sleep(2)
            main_page.click_by_LINK_TEST("마이쿠팡")
            driver.save_screenshot('메인페이지-마이쿠팡-성공.jpg')
            assert "login" in driver.current_url


        except NoSuchElementException as e:
            driver.save_screenshot('메인페이지-링크텍스트-실패.jpg')
            assert False
            
        except TimeoutException as e:
            driver.save_screenshot('메인페이지-링크텍스트-타임에러.jpg')
            assert False
            
    @pytest.mark.skip(reason="아직 테스트 케이스 발동 안함")
    def test_search_item(self, driver: WebDriver):
        try:
            ITEMS_XPATH = "//form/ul/li"
            main_page = MainPage(driver)
            main_page.open()


            # 로그인 페이지(accounts)로 이동했는지 확인
            wait = ws(driver, 10) 
            wait.until(EC.url_contains("coupang.com"))
            assert "coupang.com" in driver.current_url #검증증
            time.sleep(2) #봇 아닌척

            main_page.search_items('노트')

            ws(driver, 10).until(
                EC.presence_of_element_located((By.XPATH, ITEMS_XPATH))
            )
            items = driver.find_elements((By.XPATH, ITEMS_XPATH))
            item_name = parse.quote('노트')

            assert len(items) > 0
            assert item_name in driver.current_url

            driver.save_screenshot('메인페이지-검색-성공.jpg')
        except NoSuchElementException as e:
            driver.save_screenshot('메인페이지-검색-실패.jpg')
            assert False
            
        except TimeoutException as e:
            driver.save_screenshot('메인페이지-검색-타임에러.jpg')
            assert False
            